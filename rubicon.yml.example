---
# The `rubicon` namespace holds core Rubicon configuration.
rubicon:
    # Highly recommended to leave this unchanged, unless you're
    # using different plugin sets for different Rubicon instances
    plugins_dir: plugins

    # The log level represents the verbosity of the application.
    # A lower value will print out more information, (i.e. level 2
    # will also print out any information in levels 3, 4, and 5)
    #
    # 0 will print out a lot of debug info
    # 1 will print out useful information *including player events)
    # 2 will print warnings
    # 3 will print errors
    # 4 will print FATAL errors (those causing shutdown)
    #
    # It is recommended to leave this value at 1
    log_level: 1

    # This is where any log events not specific to a server will go
    log_file: rubicon.log

# The `webui` namespace configures the behavior of the web administration
# panel, such as the ip:port/UNIX socket it listens for connections on
webui:
    # To prevent session spoofing which would allow a malicious user to access,
    # the web UI, change the secret to something unique.
    session_secret: "Change me to something unique, unless you're a total twat!"

    # What interface/port the web UI will listen for connections. If you know
    # what you're doing, you can uncomment "socket" to have the server listen
    # on a UNIX domain socket.
    listen:
        ip: 0.0.0.0
        port: 9001
        #socket: rubicon-webui.sock
        
    # This stores all users and their passwords which have access to
    # the Rubicon web administration panel. Needless to say, you should
    # change these defaults.
    users:
        - name: admin
          password: admin

# Here you can specify usergroups. 
# These permissions will be applied to every server.
# If you want to add specific permissions on a per-server basis,
# you may do so using the same hierachy as below.
#
# The group names are completely arbitrary.
permissions:
    groups: 
        manager: 
            - shutdown
            - modify_permissions

        admin:
            - kill
            - ban
            - kick
            - yell

        hacker:
            - voteban_exempt
            - votekick_exempt

    players:
        - name: 200proof
          groups:
            - manager
            - admin
            - hacker

        # Notice how this user has a permissions field.
        # As such, he will have the `use_hax`and `pwn_noobs`
        # permission in addition to any permission he inherits from
        # the `hacker` group.
        - name: Leo 
          groups:
            - hacker
          permissions:
            - use_hax
            - pwn_noobs